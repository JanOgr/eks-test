apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::249367319910:role/fluentd-cloudwatch-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
      annotations:
        logs.cloudwatch.fluentd/enabled: "true"
        logs.cloudwatch.fluentd/log-group-name: "/aws/eks/eks-test/cluster"
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:4-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
  - protocol: TCP
    port: 5672
    targetPort: 5672
    name: amqp
  - protocol: TCP
    port: 15672
    targetPort: 15672
    name: management
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rabbitmq-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rabbitmq
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: kube-system
data:
  fluent.conf: |
    <source>
      @type tail
      path /var/log/containers/*rabbitmq*.log
      pos_file /var/log/fluentd-rabbitmq.log.pos
      tag rabbitmq.var.log.containers.*
      format none
    </source>

    <system>
      log_level debug
    </system>

    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>

    <match **>
         @type cloudwatch_logs
         log_group_name /aws/eks/eks-test/cluster
         log_stream_name rabbitmq
         auto_create_stream true
         region eu-north-1
         <buffer>
           @type file
           path /var/log/fluentd-buffers/cloudwatch
         </buffer>
       </match>
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: fluentd
  template:
    metadata:
      labels:
        app: fluentd
    spec:
      serviceAccountName: fluentd
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:v1.14.6-debian-cloudwatch-1.0
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: fluentd-config
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-role
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-system